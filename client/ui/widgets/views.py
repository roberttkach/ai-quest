from typing import Dict, Any

from rich.console import RenderableType
from rich.columns import Columns
from rich.panel import Panel
from rich.table import Table
from rich.text import Text


def render_status(data: Dict[str, Any]) -> RenderableType:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –∏ –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä–æ–∫–∞ –∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
    """
    player_data = data.get('player', {})
    location_data = data.get('location', {})

    player_text = Text.from_markup(
        f"[bold]–ò–º—è:[/] {player_data.get('name', 'N/A')}\n"
        f"[bold]–°—Ç–∞—Ç—É—Å:[/] {', '.join(player_data.get('status', ['N/A']))}\n"
        f"[bold]–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å:[/] {', '.join(player_data.get('inventory', ['N/A']))}"
    )
    player_panel = Panel(
        player_text,
        title="[bold]üë§ –ü–µ—Ä—Å–æ–Ω–∞–∂[/]",
        border_style="cyan",
        expand=True
    )

    location_text = Text.from_markup(
        f"[bold]–õ–æ–∫–∞—Ü–∏—è:[/] {location_data.get('name', 'N/A')}\n"
        f"[bold]–î—Ä—É–≥–∏–µ –∏–≥—Ä–æ–∫–∏ –∑–¥–µ—Å—å:[/] {', '.join(location_data.get('players', [])) or '–Ω–∏–∫–æ–≥–æ'}\n"
        f"[bold]–û–ø–∏—Å–∞–Ω–∏–µ:[/] {location_data.get('description', 'N/A')}"
    )
    location_panel = Panel(
        location_text,
        title="[bold]üìç –û–∫—Ä—É–∂–µ–Ω–∏–µ[/]",
        border_style="yellow",
        expand=True
    )

    return Columns([player_panel, location_panel], expand=True, equal=True)


def render_stats(data: Dict[str, Any]) -> RenderableType:
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –ø–∞–Ω–µ–ª—å —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –∏–≥—Ä—ã."""
    stats_table = Table.grid(padding=(0, 2))
    stats_table.add_column(style="bold cyan", justify="right")
    stats_table.add_column(justify="left")

    stats_table.add_row("–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤:", str(data.get('player_count', 'N/A')))
    stats_table.add_row("–ê–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ–∫–∞—Ü–∏–π:", str(data.get('location_count', 'N/A')))
    stats_table.add_row("–°–≤—è–∑–µ–π –º–µ–∂–¥—É –ª–æ–∫–∞—Ü–∏—è–º–∏:", str(data.get('connection_count', 'N/A')))
    stats_table.add_row("–ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏:", str(data.get('world_flags', '–ù–µ—Ç')))

    return Panel(
        stats_table,
        title="[bold]üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ò–≥—Ä—ã[/]",
        border_style="green",
        expand=False
    )


def render_players(data: Dict[str, Any], current_user: str) -> RenderableType:
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –ø–∞–Ω–µ–ª—å —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤."""
    players = data.get('players', [])
    player_list = Text()
    for player in sorted(players):
        style = "bold yellow" if player == current_user else "white"
        player_list.append(f" ‚Ä¢ {player}\n", style=style)

    return Panel(
        player_list,
        title=f"[bold]üë• –ò–≥—Ä–æ–∫–∏ ({len(players)})[/]",
        border_style="magenta",
        expand=False
    )


def render_help() -> RenderableType:
    """–†–µ–Ω–¥–µ—Ä–∏—Ç –ø–∞–Ω–µ–ª—å —Å –ø–æ–º–æ—â—å—é –ø–æ –∫–æ–º–∞–Ω–¥–∞–º."""
    help_text = Text.from_markup(
        "  [bold cyan]/say [—Ç–µ–∫—Å—Ç][/] - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –≤ –≤–∞—à–µ–π –ª–æ–∫–∞—Ü–∏–∏.\n"
        "  [bold cyan]/status[/]      - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–æ–∫–∞—Ü–∏–∏.\n"
        "  [bold cyan]/stats[/]       - –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä—ã.\n"
        "  [bold cyan]/players[/]     - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤.\n"
        "  [bold cyan]/help[/]        - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n"
        "  [bold cyan]/exit[/] –∏–ª–∏ [bold cyan]/quit[/] - –í—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã."
    )
    return Panel(
        help_text,
        title="[bold]‚ùì –ü–æ–º–æ—â—å[/]",
        border_style="blue",
        expand=False
    )
